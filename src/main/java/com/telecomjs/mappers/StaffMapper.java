package com.telecomjs.mappers;

import com.mchange.v2.async.StrandedTaskReporting;
import com.telecomjs.beans.Staff;
import com.telecomjs.beans.StaffExample;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public interface StaffMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAFF
     *
     * @mbggenerated
     */
    int countByExample(StaffExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAFF
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer staffId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAFF
     *
     * @mbggenerated
     */
    int insert(Staff record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAFF
     *
     * @mbggenerated
     */
    int insertSelective(Staff record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAFF
     *
     * @mbggenerated
     */
    Staff selectByPrimaryKey(Integer staffId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAFF
     *
     * @mbggenerated
     */
    public int updateByPrimaryKeySelective(Staff record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAFF
     *
     * @mbggenerated
     */
    public int updateByPrimaryKey(Staff record);

    Staff findStaffByMobile(@Param("mobile") String mobile);

    int safeDeleteByStaffId(@Param("staffId") int staffId);

    Integer getPrimaryKey();

    List<Staff> findStaffByArea(@Param("areaId") long areaId);
    List<Staff> findStaffByDistrict(@Param("districtId") long districtId);
    List<Staff> findStaffByZone(@Param("zoneId") long zoneId);
    List<Staff> findStaffWithoutCss();
    List<Staff> findAll();

    List<String> findZoneByStaff(@Param("cssNumber") String cssNumber);

    List<Staff> findZoneStaffById(@Param("staffId") Integer staffId);

    List<String> findDistrictByStaff(@Param("cssNumber") String cssNumber);
    String findAreaByStaff(@Param("cssNumber") String cssNumber);
}