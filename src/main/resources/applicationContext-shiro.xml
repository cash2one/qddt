<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <bean id="defaultPasswordService" class="org.apache.shiro.authc.credential.DefaultPasswordService" />
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>

    <bean id="DefaultRealm" class="com.telecomjs.secs.DefaultRealm" >
        <!-- 配置密码匹配器 -->
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <!-- 加密算法为MD5 -->
                <property name="hashAlgorithmName" value="MD5"></property>
                <!-- 加密次数 -->
                <property name="hashIterations" value="2"></property>
            </bean>
        </property>
    </bean>
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- securityManager 核心控制器 -->
        <property name="realm" ref="DefaultRealm"/>
    </bean>

    <!-- 过滤器配置, 同时在web.xml中配置filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login.html"/>
        <property name="successUrl" value="/index.html"/>
        <property name="unauthorizedUrl" value="/noperm.html"/>
        <property name="filters">
            <map>
                <entry key="authc">
                    <bean class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter" />
                </entry>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /logout        = anon    <!--anon:anonymous, 匿名的, 不需要权限 -->
                /login         =anon
                /user/dologin         =anon
                /user/dologin.html  = anon
                /js/*        = anon
                /fonts/*        = anon
                /css/*        = anon
                /image/**       = authc    <!-- 需要认证通过, 即登录成功 -->
                /staff/**        = authc,perms[ADMIN] <!-- 需要名称为blog的权限permission-->
                /assessment/**        = authc <!--,roles[ADMIN] 需要名称为admin的角色role-->
                /user/**        = authc
                /item/**        = authc
                /index*        = authc
                /ceoindex*        = authc
                /deoindex*        = authc
                /areaindex*        = authc
                /mark               = anon

                <!-- 说明: /*匹配的的是/abc;  /** 匹配的是多个/*, 比如/abc/def -->
            </value>
        </property>
    </bean>
</beans>